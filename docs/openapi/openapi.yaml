openapi: 3.1.0
info:
  version: 0.0.1
  title: Nina Protocol API
  termsOfService: 'https://ninaprotocol.com/terms/'
  contact:
    email: contact@ninaprotocol.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://dokuapveew3fcnpixu2zglmhvin46l5p3akgg662wcb6n55dureq.arweave.net/G5VAPqQltlE16L01ky2HqhvPL6_YFGN72rCD5vejpEk'
  description:
    $ref: ./info-description.md
tags:
  - name: Accounts
    description: 
          $ref: ./account-description.md
  - name: Exchanges
    description: 
          $ref: ./exchange-description.md
  - name: Hubs
    description: 
          $ref: ./hub-description.md
  - name: Posts
    description: 
          $ref: ./post-description.md
  - name: Releases
    description: 
      $ref: ./release-description.md
  - name: Search
    description: 
      $ref: ./search-description.md
servers:
  - url: 'https://api.ninaprotocol.com'
    description: Nina Protocol API
    variables:
      protocol:
        default: https
        enum:
          - https
          - http
      host:
        default: api.ninaprotocol.com
      basePath:
        default: /v1
paths:
  /accounts:
    $ref: 'paths/accounts.yaml'
  /accounts/{publicKey}:
    $ref: 'paths/accounts_{publicKey}.yaml'
  /accounts/{publicKey}/collected:
    $ref: paths/accounts_{publicKey}/collected.yaml
  /accounts/{publicKey}/exchanges:
    $ref: paths/accounts_{publicKey}/exchanges.yaml
  /accounts/{publicKey}/hubs:
    $ref: paths/accounts_{publicKey}/hubs.yaml
  /accounts/{publicKey}/posts:
    $ref: paths/accounts_{publicKey}/posts.yaml
  /accounts/{publicKey}/published:
    $ref: paths/accounts_{publicKey}/published.yaml
  /exchanges:
    $ref: 'paths/exchanges.yaml'
  /exchanges/{publicKey}:
    $ref: 'paths/exchanges_{publicKey}.yaml'
  /hubs:
    $ref: 'paths/hubs.yaml'
  /hubs/{publicKeyOrHandle}:
    $ref: 'paths/hubs_{publicKeyOrHandle}.yaml'
  /hubs/{publicKeyOrHandle}/collaborators:
    $ref: paths/hubs_{publicKeyOrHandle}/collaborators.yaml
  /hubs/{publicKeyOrHandle}/posts:
    $ref: paths/hubs_{publicKeyOrHandle}/posts.yaml
  /hubs/{publicKeyOrHandle}/releases:
    $ref: paths/hubs_{publicKeyOrHandle}/releases.yaml
  /posts:
    $ref: 'paths/posts.yaml'
  /posts/{publicKey}:
    $ref: 'paths/posts_{publicKey}.yaml'
  /releases:
    $ref: 'paths/releases.yaml'
  /releases/{publicKey}:
    $ref: 'paths/releases_{publicKey}.yaml'
  /releases/{publicKey}/collectors:
    $ref: 'paths/releases_{publicKey}/collectors.yaml'
  /releases/{publicKey}/hubs:
    $ref: 'paths/releases_{publicKey}/hubs.yaml'
  /releases/{publicKey}/exchanges:
    $ref: 'paths/releases_{publicKey}/exchanges.yaml'
  /search:
    $ref: 'paths/search.yaml'
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic